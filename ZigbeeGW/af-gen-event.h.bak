// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef __AF_GEN_EVENT__
#define __AF_GEN_EVENT__


// Code used to configure the cluster event mechanism
#define EMBER_AF_GENERATED_EVENT_CODE \
  EmberEventControl emberAfIdentifyClusterServerTickCallbackControl1; \
  extern EmberEventControl appPowerOnEventControl; \
  extern EmberEventControl appRebootEventControl; \
  extern EmberEventControl emberAfPluginDeviceTableNewDeviceEventControl; \
  extern EmberEventControl emberAfPluginIasZoneClientStateMachineEventControl; \
  extern EmberEventControl emberAfPluginNetworkSteeringFinishSteeringEventControl; \
  extern EmberEventControl emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl; \
  extern EmberEventControl otaScheduleDelayEventControl; \
  extern EmberEventControl scheduleRfTestEventControl; \
  extern void appPowerOnHandler(void); \
  extern void appRebootEventHandler(void); \
  extern void emberAfPluginDeviceTableNewDeviceEventHandler(void); \
  extern void emberAfPluginIasZoneClientStateMachineEventHandler(void); \
  extern void emberAfPluginNetworkSteeringFinishSteeringEventHandler(void); \
  extern void emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler(void); \
  extern void otaScheduleDelayHandler(void); \
  extern void scheduleRfTestHandler(void); \
  static void networkEventWrapper(EmberEventControl *control, EmberAfNetworkEventHandler handler, uint8_t networkIndex) \
  { \
    emberAfPushNetworkIndex(networkIndex); \
    emberEventControlSetInactive(*control); \
    (*handler)(); \
    emberAfPopNetworkIndex(); \
  } \
  EmberEventControl emberAfPluginNetworkCreatorSecurityOpenNetworkNetworkEventControls[1]; \
  extern void emberAfPluginNetworkCreatorSecurityOpenNetworkNetworkEventHandler(void); \
  void emberAfPluginNetworkCreatorSecurityOpenNetworkNetworkEventWrapper0(void) { networkEventWrapper(&emberAfPluginNetworkCreatorSecurityOpenNetworkNetworkEventControls[0], emberAfPluginNetworkCreatorSecurityOpenNetworkNetworkEventHandler, 0); } \
  EmberEventControl emberAfPluginScanDispatchScanNetworkEventControls[1]; \
  extern void emberAfPluginScanDispatchScanNetworkEventHandler(void); \
  void emberAfPluginScanDispatchScanNetworkEventWrapper0(void) { networkEventWrapper(&emberAfPluginScanDispatchScanNetworkEventControls[0], emberAfPluginScanDispatchScanNetworkEventHandler, 0); } \
  static void clusterTickWrapper(EmberEventControl *control, EmberAfTickFunction callback, uint8_t endpoint) \
  { \
    emberAfPushEndpointNetworkIndex(endpoint); \
    emberEventControlSetInactive(*control); \
    (*callback)(endpoint); \
    emberAfPopNetworkIndex(); \
  } \
  void emberAfIdentifyClusterServerTickCallbackWrapperFunction1(void) { clusterTickWrapper(&emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallback, 1); } \


// EmberEventData structs used to populate the EmberEventData table
#define EMBER_AF_GENERATED_EVENTS   \
  { &emberAfIdentifyClusterServerTickCallbackControl1, emberAfIdentifyClusterServerTickCallbackWrapperFunction1 }, \
  { &appPowerOnEventControl, appPowerOnHandler }, \
  { &appRebootEventControl, appRebootEventHandler }, \
  { &emberAfPluginDeviceTableNewDeviceEventControl, emberAfPluginDeviceTableNewDeviceEventHandler }, \
  { &emberAfPluginIasZoneClientStateMachineEventControl, emberAfPluginIasZoneClientStateMachineEventHandler }, \
  { &emberAfPluginNetworkSteeringFinishSteeringEventControl, emberAfPluginNetworkSteeringFinishSteeringEventHandler }, \
  { &emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventControl, emberAfPluginUpdateTcLinkKeyBeginTcLinkKeyUpdateEventHandler }, \
  { &otaScheduleDelayEventControl, otaScheduleDelayHandler }, \
  { &scheduleRfTestEventControl, scheduleRfTestHandler }, \
  { &emberAfPluginNetworkCreatorSecurityOpenNetworkNetworkEventControls[0], emberAfPluginNetworkCreatorSecurityOpenNetworkNetworkEventWrapper0 }, \
  { &emberAfPluginScanDispatchScanNetworkEventControls[0], emberAfPluginScanDispatchScanNetworkEventWrapper0 }, \


#define EMBER_AF_GENERATED_EVENT_STRINGS   \
  "Identify Cluster Server EP 1",  \
  "App power on event control",  \
  "App reboot event control",  \
  "Device Table Plugin NewDevice",  \
  "IAS Zone Client Plugin StateMachine",  \
  "Network Steering Plugin FinishSteering",  \
  "Update TC Link Key Plugin BeginTcLinkKeyUpdate",  \
  "Ota schedule delay event control",  \
  "Schedule rf test event control",  \
  "Network Creator Security Plugin OpenNetwork NWK 0", \
  "Scan Dispatch Plugin Scan NWK 0", \


// The length of the event context table used to track and retrieve cluster events
#define EMBER_AF_EVENT_CONTEXT_LENGTH 1

// EmberAfEventContext structs used to populate the EmberAfEventContext table
#define EMBER_AF_GENERATED_EVENT_CONTEXT { 0x1, 0x3, false, EMBER_AF_LONG_POLL, EMBER_AF_OK_TO_SLEEP, &emberAfIdentifyClusterServerTickCallbackControl1}


#endif // __AF_GEN_EVENT__
